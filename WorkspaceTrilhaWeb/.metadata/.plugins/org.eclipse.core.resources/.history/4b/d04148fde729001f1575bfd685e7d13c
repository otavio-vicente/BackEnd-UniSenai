package br.com.gcontato.servlet;
import java.io.IOException;
import java.io.PrintWriter;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

public class AdicionaContatoServlet extends HttpServlet {
	/*Daqui*/
	private static final long serialVersionUID = 1L;
	
	public AdicionaContatoServlet() {
		super();
	}
	/*Até aqui
	 * trata-se de uma
	constante que serve para gravar o estado de uma classe Java e mandar para algum
	lugar, por exemplo, para um arquivo, ou até para a Internet. A Java pega os
	campos da sua classe e os grava. Desta forma, consegue-se manter a versão das
	suas classes atualizadas.
	Abaixo criamos um método construtor, que normalmente serve para inicializar
	os atributos de uma classe quando esta for instanciada.
	 * */

	@Override
	protected void service(HttpServletRequest request,
			HttpServletResponse response)
		throws ServletException, IOException{
		
	}
	
	/*
 	Destaque para o @Override, que indica que estamos sobrescrevendo o método service
	da classe mãe HttpServlet.
	Repare que o método service recebe dois objetos, request e response, que representam,
	respectivamente, a requisição feita pelo usuário e a resposta que será criada por nós e
	enviada ao lado cliente.
	 */
	
	protected void doGet(HttpServletRequest request,
			HttpServletResponse response)
		throws ServletException, IOException {
		
	}
	
	protected void doPost(HttpServletRequest request,
			HttpServletResponse response)
		throws ServletException, IOException {
		
	}
	
	/*
	 *  esses dois métodos serão utilizados quando se
	desejar tratar a passagem de dados, respectivamente,
 	pelos métodos GET e POST.
	 */
	
	
}
